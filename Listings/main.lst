C51 COMPILER V9.60.7.0   MAIN                                                              06/20/2025 16:56:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\System) DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "global.h"  // ??????????
   2          volatile unsigned long sys_tick = 0;
   3          static unsigned long last_key_time = 0;  // ????????
   4          
   5          // ??bdata???????
   6          unsigned char bdata ir_flags;
   7          sbit flag = ir_flags ^ 0;          // ????
   8          sbit repeat_flag = ir_flags ^ 1;   // ?????
   9          
  10          
  11          unsigned int count = 0;          // ?????
  12          unsigned char data_bits[32];     // ??32???
  13          unsigned char data_bits_idx = 0; // ?????
  14          unsigned char data_value = 0x40; // ????(????)
  15          unsigned char last_data_value = 0x40; // ???????
  16          unsigned char j = 0;             // ????
  17          
  18          
  19          typedef enum {
  20              MODE_REMOTE,    // ????
  21              MODE_TRACING,   // ????
  22              MODE_AVOID
  23          } WorkMode;
  24          
  25          WorkMode current_mode = MODE_REMOTE; // ???????
  26          
  27          
  28          void Remote_Init(void);
  29          void SysTick_Init(void);
  30          void ProcessRemoteCommand(void);
  31          void SwitchToRemoteMode(void);
  32          void SwitchToAvoidingMode(void);
  33          void SwitchToTracingMode(void);
  34          void Tracing_Control(void);
  35          void Usart1_SendString(char *str);
  36          void Usart1_SendHex(unsigned char hex);
  37          void Usart1_Init(unsigned int baud);
  38          
  39          // ???????????????interrupt??
  40          // ???????interrupt??
  41          // ??????????(1ms??)
  42          
  43          
  44          
  45          void Usart1_SendString(char *str) {
  46   1          while(*str) {
  47   2              SBUF = *str++;
  48   2              while(!TI);
  49   2              TI = 0;
  50   2          }
  51   1      }
  52          
  53          
  54          void Usart1_SendHex(unsigned char hex) {
C51 COMPILER V9.60.7.0   MAIN                                                              06/20/2025 16:56:28 PAGE 2   

  55   1          unsigned char nibble;
  56   1          nibble = (hex >> 4) & 0x0F;
  57   1          SBUF = (nibble < 10) ? (nibble + '0') : (nibble - 10 + 'A');
  58   1          while(!TI);
  59   1          TI = 0;
  60   1          
  61   1          nibble = hex & 0x0F;
  62   1          SBUF = (nibble < 10) ? (nibble + '0') : (nibble - 10 + 'A');
  63   1          while(!TI);
  64   1          TI = 0;
  65   1      }
  66          
  67          
  68          
  69          unsigned long GetSystemTick(void) {
  70   1          return sys_tick;
  71   1      }
  72          
  73          // ???????
  74          void Remote_Init() {
  75   1          IT1 = 1;    // ????1?????
  76   1          EX1 = 1;    // ??INT1
  77   1          EA = 1;     // ??????
  78   1      }
  79          
  80          // ??????
  81          void ProcessRemoteCommand(void) {
  82   1          unsigned long now = GetSystemTick();
  83   1          
  84   1          // 200ms????????
  85   1          if(now - last_key_time > 200) {
  86   2              Motor_Run(STOP, 0);
  87   2              return;
  88   2          }
  89   1      
  90   1          switch(data_value) {
  91   2              case 0x46:  // ?? - ?????90%
  92   2                  Motor_Run(FORWARD, PWM_DUTY * 0.5);
  93   2                  last_key_time = now;  // ?????
  94   2                  break;
  95   2                  
  96   2              case 0x44:  // ??
  97   2                  if(!repeat_flag) {
  98   3                      Motor_Run(SPINTURNLEFT, PWM_DUTY * 0.5);
  99   3                      last_key_time = now;
 100   3                  } else if(now - last_key_time > 50) {
 101   3                      Motor_Run(SPINTURNLEFT, PWM_DUTY * 0.5);
 102   3                      last_key_time = now;
 103   3                  }
 104   2                  break;
 105   2                  
 106   2              case 0x43:  // ??
 107   2                  if(!repeat_flag) {
 108   3                      Motor_Run(SPINTURNRIGHT, PWM_DUTY * 0.5);
 109   3                      last_key_time = now;
 110   3                  } else if(now - last_key_time > 50) {
 111   3                      Motor_Run(SPINTURNRIGHT, PWM_DUTY * 0.5);
 112   3                      last_key_time = now;
 113   3                  }
 114   2                  break;
 115   2                  
 116   2              case 0x15:  // ??
C51 COMPILER V9.60.7.0   MAIN                                                              06/20/2025 16:56:28 PAGE 3   

 117   2                  if(!repeat_flag) {
 118   3                      Motor_Run(BACKWARDS, PWM_DUTY * 0.5);
 119   3                      last_key_time = now;
 120   3                  } else if(now - last_key_time > 50) {
 121   3                      Motor_Run(BACKWARDS, PWM_DUTY * 0.5);
 122   3                      last_key_time = now;
 123   3                  }
 124   2                  break;
 125   2                  
 126   2              case 0x0c:  // ???????
 127   2                  SwitchToRemoteMode();
 128   2                  last_key_time = now;  // ?????
 129   2                  break;
 130   2                  
 131   2              case 0x18:  // ???????
 132   2                  SwitchToTracingMode();
 133   2                  last_key_time = now;  // ?????
 134   2                  break;
 135   2              
 136   2              case 0x5e:  // ???????
 137   2                  SwitchToAvoidingMode();
 138   2                  last_key_time = now;  // ?????
 139   2                  break;
 140   2                  
 141   2              case 0x40:  // ???
 142   2              default:
 143   2                  Motor_Run(STOP, 0);
 144   2                  last_key_time = 0;  // ?????
 145   2                  break;
 146   2          }
 147   1      }
 148          
 149          
 150          // ???????
 151          void SwitchToRemoteMode(void) {
 152   1          current_mode = MODE_REMOTE;
 153   1          Motor_Run(STOP, 0); // ??????
 154   1          // OLED??????
 155   1          // OLED_ShowString(0, 0, "Remote Mode");
 156   1      }
 157          
 158          // ???????
 159          void SwitchToTracingMode(void) {
 160   1          current_mode = MODE_TRACING;
 161   1          // OLED??????
 162   1          // OLED_ShowString(0, 0, "Tracing Mode");
 163   1      }
 164          
 165          void SwitchToAvoidingMode(void) {
 166   1          current_mode = MODE_AVOID;
 167   1          // OLED??????
 168   1          // OLED_ShowString(0, 0, "Tracing Mode");
 169   1      }
 170          
 171          // ????????(??????)
 172          // ????????(??????)
 173          void EX1_ISR(void) interrupt 2 
 174          {
 175   1          EA = 0;     // ???
 176   1          EX1 = 0;    // ??INT1
 177   1          count = 0;
 178   1      
C51 COMPILER V9.60.7.0   MAIN                                                              06/20/2025 16:56:28 PAGE 4   

 179   1          // 1. ????? (9ms??? + 4.5ms???)
 180   1          while(P33 == 0) {  // ???????
 181   2              count++;
 182   2              DelayUs(100);  // ??100us
 183   2              if(count > 180) goto exit; // ???? (18ms)
 184   2          }
 185   1          
 186   1          if(count >= 80 && count <= 100) {  // 9ms ?0%
 187   2              count = 0;
 188   2              while(P33 == 1) {  // ???????
 189   3                  count++;
 190   3                  DelayUs(100);
 191   3                  if(count > 90) break; // ?? (9ms)
 192   3              }
 193   2              
 194   2              // ????? (2.25ms???)
 195   2              if(count >= 20 && count <= 25) { 
 196   3                  data_value = last_data_value; // ??????
 197   3                  repeat_flag = 1;              // ??????
 198   3                  goto exit;
 199   3              }
 200   2              
 201   2              if(count >= 40 && count <= 50) {  // 4.5ms ?0%
 202   3                  // 2. ??32??? (??? + ???? + ?? + ???)
 203   3                  data_bits_idx = 0;
 204   3                  while(data_bits_idx < 32) {
 205   4                      // ??560us?????
 206   4                      unsigned int timeout = 0;
 207   4                      while(P33 == 0) {
 208   5                          timeout++;
 209   5                          DelayUs(20);
 210   5                          if(timeout > 1000) goto exit; // ?? (20ms)
 211   5                      }
 212   4                      
 213   4                      // ?????????
 214   4                      count = 0;
 215   4                      timeout = 0;
 216   4                      while(P33 == 1) {
 217   5                          count++;
 218   5                          DelayUs(20);
 219   5                          if(timeout++ > 1000) goto exit; // ?? (20ms)
 220   5                      }
 221   4                      
 222   4                      // ????: >56(1120us)?1, ???0
 223   4                      data_bits[data_bits_idx] = (count > 56) ? 1 : 0;
 224   4                      data_bits_idx++;
 225   4                  }
 226   3      
 227   3                  // 3. ?????(?8???8???)
 228   3                  flag = 0;
 229   3                  for(count = 0; count < 8; count++) {
 230   4                      if(data_bits[count] == data_bits[count+8]) {
 231   5                          flag = 1;  // ????
 232   5                          break;
 233   5                      }
 234   4                  }
 235   3      
 236   3                  if(flag == 0) {  // ???????
 237   4                      // 4. ????(16-23??24-31???)
 238   4                      flag = 0;
 239   4                      for(count = 0; count < 8; count++) {
 240   5                          if(data_bits[count+16] == data_bits[count+24]) {
C51 COMPILER V9.60.7.0   MAIN                                                              06/20/2025 16:56:28 PAGE 5   

 241   6                              flag = 1;  // ????
 242   6                              break;
 243   6                          }
 244   5                      }
 245   4      
 246   4                      if(flag == 0) {  // ??????
 247   5                          // 5. ????(16-23?)
 248   5                          data_value = 0x00;
 249   5                          for(j = 0; j < 8; j++) {
 250   6                              if(data_bits[16+j] == 1) {
 251   7                                  data_value |= (0x01 << j);  // LSB??
 252   7                              }
 253   6                          }
 254   5                          
 255   5                          // ???????????
 256   5                          last_data_value = data_value;
 257   5                          repeat_flag = 0;
 258   5                          
 259   5                          // ????????
 260   5                          Usart1_SendString("Key: 0x");
 261   5                          Usart1_SendHex(data_value);
 262   5                          Usart1_SendString("\r\n");
 263   5                      }
 264   4                  }
 265   3              }
 266   2          }
 267   1      
 268   1      exit:
 269   1          TCON |= 0x04;  // ??INT1????
 270   1          EX1 = 1;       // ????INT1??
 271   1          EA = 1;        // ?????
 272   1      }
 273          
 274          // ????(?????)
 275          void Tracing_Control(void) {
 276   1          if(P21 == 0 && P22 == 0) {
 277   2              Motor_Run(FORWARD, PWM_DUTY * 0.9);
 278   2          }
 279   1          else if(P21 == 0 && P22 == 1) {
 280   2              Motor_Run(TURNLEFT, PWM_DUTY * 0.9);
 281   2          }
 282   1          else if(P21 == 1 && P22 == 0) {
 283   2              Motor_Run(TURNRIGHT, PWM_DUTY * 0.9);
 284   2          }
 285   1          else {
 286   2              static int lost_track_state = 0;
 287   2              
 288   2              switch(lost_track_state) {
 289   3                  case 0: // ????
 290   3                      if(P20 == 1 && P22 == 1) {
 291   4                          Motor_Run(TURNRIGHT, PWM_DUTY * 0.9);
 292   4                          lost_track_state = 1;
 293   4                      }
 294   3                      else if(P21 == 1 && P23 == 1) {
 295   4                          Motor_Run(TURNLEFT, PWM_DUTY * 0.9);
 296   4                          lost_track_state = 2;
 297   4                      }
 298   3                      break;
 299   3                      
 300   3                  case 1: // ????????
 301   3                      if(P20 == 1 && P22 == 0) {
 302   4                          lost_track_state = 0; // ????
C51 COMPILER V9.60.7.0   MAIN                                                              06/20/2025 16:56:28 PAGE 6   

 303   4                      }
 304   3                      break;
 305   3                      
 306   3                  case 2: // ????????
 307   3                      if(P21 == 0 && P23 == 1) {
 308   4                          lost_track_state = 0; // ????
 309   4                      }
 310   3                      break;
 311   3              }
 312   2          }
 313   1      }
 314          
 315          // ???
 316          void main(void) {
 317   1          // ?????
 318   1          SysTick_Init();      // ???????
 319   1          DelayMs(1);          // ????
 320   1          Motor_PWM_Init();    // ??PWM???
 321   1          OLED_Init();         // OLED???
 322   1          Remote_Init();       // ???????
 323   1          Usart1_Init(9600);   // ?????
 324   1          DelayMs(100);        // ??????
 325   1          
 326   1          // ????
 327   1          OLED_ShowString(0, 0, "Init Complete");
 328   1          OLED_ShowString(0, 2, "Mode: Tracing");
 329   1          
 330   1          // ???
 331   1          while(1) {
 332   2              // ????????????
 333   2              if(current_mode == MODE_REMOTE) {
 334   3                  ProcessRemoteCommand(); // ??????
 335   3              }
 336   2              else if(current_mode == MODE_TRACING) {
 337   3                  Tracking();      // ????
 338   3              }
 339   2              else if(current_mode == MODE_AVOID){
 340   3                  AvoidSensor();
 341   3              }
 342   2              // ?????CPU??
 343   2              DelayMs(10);
 344   2              
 345   2              // ??????????????
 346   2              if(current_mode == MODE_TRACING && data_value == 0x0c) {
 347   3                  SwitchToRemoteMode();
 348   3              }
 349   2              if(current_mode == MODE_AVOID && data_value == 0x0c) {
 350   3                  SwitchToRemoteMode();
 351   3              }
 352   2          }
 353   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1506    ----
   CONSTANT SIZE    =     39    ----
   XDATA SIZE       =     49       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              06/20/2025 16:56:28 PAGE 7   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
