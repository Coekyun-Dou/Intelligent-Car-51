C51 COMPILER V9.60.7.0   AVOID_OBSTACLE                                                    12/21/2024 15:42:25 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE AVOID_OBSTACLE
OBJECT MODULE PLACED IN .\Objects\avoid_obstacle.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE avoid_obstacle.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\System) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\avoid_obstacle.lst) TABS(2) OBJECT(.\Objects\avoid_obstacle.obj)

line level    source

   1          #include "avoid_obstacle.h"
   2          
   3          /*单片机引脚初始化*/
   4          void Obstacle_Init(){
   5   1        int left_pin_statu = 0;
   6   1        int right_pin_statu = 0;
   7   1        GPIO_InitTypeDef left_gpio_config = {GPIO_HighZ, GPIO_Pin_6};
   8   1        GPIO_InitTypeDef right_gpio_config = {GPIO_HighZ, GPIO_Pin_7};
   9   1        
  10   1        /*初始化引脚为输入模式*/
  11   1        left_pin_statu = GPIO_Init(GPIO_P2, &left_gpio_config);
  12   1        right_pin_statu = GPIO_Init(GPIO_P2, &right_gpio_config);
  13   1      }
  14          
  15          
  16          /*检测当前障碍物*/
  17          DirectonStatus Obstacle_Check(){
  18   1        
  19   1        /*读取引脚信息*/
  20   1        bit left_statu = GPIO_ReadInputDataBit(GPIO_P2, GPIO_Pin_6);
  21   1        bit right_statu = GPIO_ReadInputDataBit(GPIO_P2, GPIO_Pin_7);
  22   1        
  23   1        /*判断方向*/
  24   1        if(left_statu == 1 && right_statu == 0){
  25   2          return A_GO;
  26   2        }else if(left_statu == 0 && right_statu == 0){
  27   2          return A_LEFT;
  28   2        }else if(left_statu == 1 && right_statu == 1){
  29   2          return A_RIGHT;
  30   2        }else{
  31   2          return A_RIGHT;
  32   2        }
  33   1      }
  34          
  35          /*避障功能*/
  36          void Start_Avoid_Obstacle(){
  37   1        switch(Obstacle_Check()){
  38   2          case A_GO:
  39   2            Motor_Run(FORWARD, PWM_DUTY / 100 * SPEED);
  40   2            DelayMs(100);
  41   2            break;
  42   2          case A_LEFT:
  43   2            Motor_Run(TURNLEFT, PWM_DUTY / 100 * SPEED);
  44   2            DelayMs(100);
  45   2            break;
  46   2          case A_RIGHT:
  47   2            Motor_Run(TURNRIGHT, PWM_DUTY / 100 * SPEED);
  48   2            DelayMs(115);
  49   2            Motor_Run(FORWARD, PWM_DUTY / 100 * SPEED);
  50   2            DelayMs(25);
  51   2            break;
  52   2        }
  53   1      
  54   1      }
C51 COMPILER V9.60.7.0   AVOID_OBSTACLE                                                    12/21/2024 15:42:25 PAGE 2   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    203    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
